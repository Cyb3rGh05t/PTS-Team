#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# YML Author: Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
# Origin:     https://github.com/l3uddz/plex_patrol
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS ######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'pgtrakt'
        extport: '0'

    - name: Server ID
      shell: 'cat /var/plexguide/pg.serverid'
      register: serverid

    - name: Token Recall
      shell: 'cat /var/plexguide/plex.token'
      register: plextoken

    - name: Recall User
      shell: 'cat /var/plexguide/plex.user'
      register: user

    - name: Register IP
      shell: 'cat /var/plexguide/server.ip'
      register: ipaddress

    - name: Sonarr API
      shell: 'cat /var/plexguide/pgtrak.sapi'
      register: sapi
      ignore_errors: True

    - name: Radarr API
      shell: 'cat /var/plexguide/pgtrak.rapi'
      register: rapi
      ignore_errors: True

    - name: Sonarr Profile
      shell: 'cat /var/plexguide/pgtrak.sprofile'
      register: sprofile
      ignore_errors: True

    - name: Radarr Profile
      shell: 'cat /var/plexguide/pgtrak.rprofile'
      register: rprofile
      ignore_errors: True

    - name: Trakt.tv Client
      shell: 'cat /var/plexguide/pgtrak.client'
      register: client
      ignore_errors: True

    - name: Trakt.tv Secret
      shell: 'cat /var/plexguide/pgtrak.secret'
      register: secret
      ignore_errors: True

    - name: Radarr Path
      shell: 'cat /var/plexguide/pgtrak.rpath'
      register: rpath
      ignore_errors: True

    - name: Sonnar Path
      shell: 'cat /var/plexguide/pgtrak.spath'
      register: spath
      ignore_errors: True

    - name: Max allowed Year
      shell: 'cat /var/plexguide/pgtrakyear.max'
      register: year
      ignore_errors: True

    - name: Install pip requirements
      pip:
        requirements: /opt/plexguide/menu/traktarr/requirements.txt
        executable: pip3

    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'

    - name: Create Basic Directories
      file: 'path={{item}} state=directory mode=0775 owner=1000 group=1000'
      with_items:
        - '/opt/appdata/traktarr/'

    - name: Transfer Files
      copy:
        src: /opt/plexguide/menu/traktarr
        dest: /opt/appdata
        owner: '1000'
        group: '1000'
        mode: a+x
        force: yes

    - name: Import default config
      template:
        src: /opt/appdata/traktarr/config.json.sample
        dest: /opt/appdata/traktarr/config.json
        owner: '1000'
        group: '1000'
        mode: 0775
        force: yes

    - name: Set pgtrak.py as executable
      file:
        path: /opt/appdata/traktarr/traktarr.py
        owner: '1000'
        group: '1000'
        mode: a+x

    - name: 'Create /usr/local/bin symlink'
      file:
        src: '/opt/appdata/traktarr/traktarr.py'
        dest: '/bin/traktarr'
        state: link

    - name: Check Service's Existance
      stat:
        path: '/etc/systemd/systemd/traktarr.service'
      register: pgp

    - name: Stop service
      service:
        name: traktarr
        state: stopped
      when: pgp.stat.exists

    - name: traktarr Service
      template:
        src: /opt/appdata/traktarr/systemd/traktarr.service
        dest: /etc/systemd/system/traktarr.service
        force: yes

    - name: Daemon-Reload
      systemd: state=stopped name=traktarr daemon_reload=yes enabled=no

    - name: Start PGTrakt
      systemd: state=started name=traktarr enabled=yes
