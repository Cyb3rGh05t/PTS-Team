######################################################################
##
## some of this parts are cloned from Cloudbox 
## many thanks to all the devs from Cloudbox
##
## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
##
## Credits fly to l3uddz and the CBox Boys "!"
## Mod from MrDoob ( main dev of PTS )
## based of PGblitz v8.7.5
#######################################################################

---
- name: "MergerFS | Get URL for latest mergerfs release"
  shell: |
    curl -s https://api.github.com/repos/trapexit/mergerfs/releases/latest \
      | jq -r ".assets[] | select(.name | test(\"{{ ansible_distribution|lower }}-{{ ansible_distribution_release|lower }}_amd64\")) \
      | .browser_download_url"
  args:
    executable: /bin/bash
    warn: no
  register: mergerfs_download_url
  ignore_errors: yes

- name: "MergerFS | Set 'mergerfs_download_url_backup' variable"
  set_fact:
    mergerfs_download_url_backup: https://github.com/trapexit/mergerfs/releases/download/2.28.1/mergerfs_2.28.1.{{ ansible_distribution|lower
     }}-{{ ansible_distribution_release|lower }}_amd64.deb

- name: "MergerFS | Install mergerfs"
  apt:
    deb: "{{ mergerfs_download_url.stdout | default('{{ mergerfs_download_url_backup }}') }}"
    state: present

- name: Check if pgunion is running and works
  command: systemctl status "{{ item }}"
  with_items:
    - pgunion
  ignore_errors: yes
  changed_when: false
  register: service_pgunion_status

- name: Report status of pgunion
  fail:
    msg: |
      Service mergerfs is not running.
      Output of `systemctl status pgunion`:
      {{ service_pgunion_status.stdout }}
      {{ service_pgunion_status.stderr }}
  when: service_pgunion_status | failed

- name: "PGunion restart"
  systemd:
    state: restarted
    daemon_reload: yes
    name: pgunion

- name: 'Restart Containers '
  shell: 'docker restart $(docker ps -a -q)'
  ignore_errors: yes

- name: 'Restart check.sh'
  shell: 'bash /opt/plexguide/menu/pgui/check.sh >/dev/null 2>&1'
  ignore_errors: yes

- name: Check if docker is running and works
  command: systemctl status "{{ item }}"
  with_items:
    - docker
  ignore_errors: yes
  changed_when: false
  register: service_docker_status

- name: Report status of docker
  fail:
    msg: |
      Service docker is not running.
      Output of `systemctl status docker`:
      {{ service_docker_status.stdout }}
      {{ service_docker_status.stderr }}
  when: service_docker_status | failed